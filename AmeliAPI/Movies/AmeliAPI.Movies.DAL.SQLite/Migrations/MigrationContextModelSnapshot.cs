// <auto-generated />
using System;
using AmeliAPI.Movies.DAL.SQLite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AmeliAPI.Movies.DAL.SQLite.Migrations
{
    [DbContext(typeof(MigrationContext))]
    partial class MigrationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Movies")
                .HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("AmeliAPI.Movies.Model.Entities.AssociatedPerson", b =>
                {
                    b.Property<int>("AssociatedPersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Prename")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("AssociatedPersonID");

                    b.ToTable("AssociatedPerson", "Movies");
                });

            modelBuilder.Entity("AmeliAPI.Movies.Model.Entities.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("GenreID");

                    b.ToTable("Genre", "Movies");
                });

            modelBuilder.Entity("AmeliAPI.Movies.Model.Entities.Movie", b =>
                {
                    b.Property<int>("MovieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<string>("MovieSubtitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("MovieTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.HasKey("MovieID");

                    b.ToTable("Movie", "Movies");
                });

            modelBuilder.Entity("AmeliAPI.Movies.Model.Entities.MovieAssociatedPerson", b =>
                {
                    b.Property<int>("MovieID")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<int>("AssociatedPersonID")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<int>("RoleFlags")
                        .HasColumnType("INTEGER");

                    b.HasKey("MovieID", "AssociatedPersonID");

                    b.HasIndex("AssociatedPersonID");

                    b.ToTable("MovieAssociatedPerson", "Movies");
                });

            modelBuilder.Entity("AmeliAPI.Movies.Model.Entities.MovieGenre", b =>
                {
                    b.Property<int>("MovieID")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<int>("GenreID")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.HasKey("MovieID", "GenreID");

                    b.HasIndex("GenreID");

                    b.ToTable("MovieGenre", "Movies");
                });

            modelBuilder.Entity("AmeliAPI.Movies.Model.Entities.MovieAssociatedPerson", b =>
                {
                    b.HasOne("AmeliAPI.Movies.Model.Entities.AssociatedPerson", "AssociatedPerson")
                        .WithMany("MovieAssociatedPersons")
                        .HasForeignKey("AssociatedPersonID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AmeliAPI.Movies.Model.Entities.Movie", "Movie")
                        .WithMany("MovieAssociatedPersons")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssociatedPerson");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("AmeliAPI.Movies.Model.Entities.MovieGenre", b =>
                {
                    b.HasOne("AmeliAPI.Movies.Model.Entities.Genre", "Genre")
                        .WithMany("MovieGenres")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AmeliAPI.Movies.Model.Entities.Movie", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("AmeliAPI.Movies.Model.Entities.AssociatedPerson", b =>
                {
                    b.Navigation("MovieAssociatedPersons");
                });

            modelBuilder.Entity("AmeliAPI.Movies.Model.Entities.Genre", b =>
                {
                    b.Navigation("MovieGenres");
                });

            modelBuilder.Entity("AmeliAPI.Movies.Model.Entities.Movie", b =>
                {
                    b.Navigation("MovieAssociatedPersons");

                    b.Navigation("MovieGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
